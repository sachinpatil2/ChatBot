<?xml version="1.0" encoding="UTF-8"?>
<n:dialog xsi:schemaLocation="http://cto.net/hmi schema1.xsd" xmlns:n="http://cto.net/hmi/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ola" company="deasra">
	<start_task_name>start</start_task_name>
	<global_language>en</global_language>
	<useSODA>false</useSODA>
	<allowSwitchTasks>true</allowSwitchTasks>
	<allowOverAnswering>true</allowOverAnswering>
	<allowDifferentQuestion>true</allowDifferentQuestion>
	<allowCorrection>true</allowCorrection>
	<useIntentEngine>true</useIntentEngine>
	<tasks>
		<task name="start">
			<selector>
				<bagOfWordsTaskSelector>
					<word>hello</word>
				</bagOfWordsTaskSelector>
			</selector>
			<itos>
				<ito name="welcome">
					<AQD>
						<type>
							<answerType>open_ended</answerType>
						</type>
					</AQD>
					<fallback_question>					
					 how may I help you?
					</fallback_question>
					<required>true</required>
				</ito>
			</itos>
		</task>
		<task name="getFAQ" label="Find FAQ">
			<selector/>
			<itos>
				<ito label="Question" name="getQuestion">
					<AQD>
						<type>
							<answerType>dummy</answerType>
						</type>
					</AQD>
					<fallback_question>OK</fallback_question>
					<required>true</required>
				</ito>
			</itos>
			<action>
				<groovyAction>
					<returnAnswer>true</returnAnswer>
					<utteranceTemplate>#chat</utteranceTemplate>
					<code>
						<![CDATA[import org.codehaus.jettison.json.JSONException
                    import org.codehaus.jettison.json.JSONObject
					import java.net.HttpURLConnection
					import java.io.BufferedReader;
					import java.io.IOException;
					import java.io.InputStreamReader;
					import java.io.OutputStream;
					import java.net.HttpURLConnection;
					import java.net.InetSocketAddress;
					import java.net.MalformedURLException;
					import java.net.Proxy;
					import java.net.URL;
					
					
                    String question=new String(frame.get("getQuestion"));
					String body = new String ("");
                    String chat = new String ("");
					String output = new String("");
					String outputChat = new String("");
					if(question.equalsIgnoreCase("NO") || question.equalsIgnoreCase("NOT") || question.equalsIgnoreCase("N")){
						chat = "raise a Ticket";					
					}else{
					
					try {
						Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress("ptproxy.persistent.co.in", 8080));
						URL url = new URL("http://workappsinc.cloudapp.net:7171/get_answer/");
						HttpURLConnection conn = (HttpURLConnection) url.openConnection(proxy);
						conn.setDoOutput(true);
						conn.setRequestMethod("POST");
						conn.setRequestProperty("Content-Type", "application/json");
						String input = "{\"query\":\""+URLEncoder.encode(question, "UTF-8")+"\",\"bookId\":\"123\"}";
						OutputStream os = conn.getOutputStream();
						os.write(input.getBytes());
						os.flush();	
						BufferedReader br = new BufferedReader(new InputStreamReader((conn.getInputStream())));						
						System.out.println("Output from Server .... \n");
						while ((output = br.readLine()) != null) {														
							outputChat = output;
						}						
						if (conn.getResponseCode() == 200 || conn.getResponseCode() == 201) {
											
							JSONObject json = new JSONObject(outputChat);	
							System.out.println(json);
							chat = json.get("result").getString("answer");							
							articleId = json.get("result").getString("articleId");
							chat = chat+"articleId:"+articleId+":<br><br>";
							if(chat.equals("NA"))
								chat="Sorry, I did not understand that.";
						}else{
							chat = "Sorry, I did not understand that.";
						}
						
						conn.disconnect();
					  } catch (MalformedURLException e) {
						e.printStackTrace();
					  } catch (IOException e) {
						e.printStackTrace();
					  }						
					}					
                    executionResults.put("body",body);
                    executionResults.put("chat",chat);]]>
					</code>
				</groovyAction>
			</action>
		</task> <!--
		<task name="cancelTask" label="Cancel Task">
			<selector>
			</selector>
			<followup>
				<ito label="cancel Decision" name="cancelDecision">
					<AQD>
						<type>
							<answerType>custom.item_8</answerType>
						</type>
					</AQD>
					<fallback_question>Do you want to cancel the task?</fallback_question>
					<required>true</required>
				</ito>
				<answerMapping>
					<item key="Yes">start</item>
				</answerMapping>
			</followup>
			<action>
				<groovyAction>
					<returnAnswer>false</returnAnswer>
					<utteranceTemplate />
					<code />
				</groovyAction>
			</action>
		</task> -->
	</tasks>
</n:dialog>